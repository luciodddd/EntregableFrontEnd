{"ast":null,"code":"var _jsxFileName = \"D:\\\\Certified Tech Dev\\\\2022 - Bimestre III\\\\Front-End II\\\\Ejercicios\\\\Entregable\\\\src\\\\components\\\\Item.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\"; // El componente Item no tiene componentes hijos.\n// ESTADO: Item debe tener un número para almacenar la cantidad de stock, la misma se la defina el padre a la hora de crearlo.\n// MÉTODOS: Item debe manejar el click de su boton para restar la cantidad en stock de sí mismo y a su vez poder aumentar el estado de su \"abuelo\" App.\n// PROPS: Item recibe todos los campos que muestra en pantalla: nombre, descripcion, stock y el métodos heredados para su uso.\n// Maqueta de Item:\n//    h3\n//    p\n//    h5 > span    (este span debe mostrar la cantidad si es mayor a 0 \"agotado\" si llega a 0)\n//    button       (este boton debe permitir comprar, pero si la cantidad es menor a 0 debe estar deshabilitado y decir \"Sin stock\")\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Item(props) {\n  _s();\n\n  const [stock, setStock] = useState(props.stock);\n\n  function sell() {\n    console.log(stock);\n\n    if (stock - 1 > 0) {\n      setStock(stock - 1);\n    } else {\n      setStock(\"agotado\");\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"producto\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: props.producto.nombre\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: props.producto.descripcion\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n      children: [\"En stock: \", /*#__PURE__*/_jsxDEV(\"span\", {\n        children: stock\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        props.comprar();\n        sell();\n      },\n      children: \"COMPRAR\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Item, \"gVscJjeznE0KD0OY/e4mWuDLQBw=\");\n\n_c = Item;\n\nvar _c;\n\n$RefreshReg$(_c, \"Item\");","map":{"version":3,"names":["useState","Item","props","stock","setStock","sell","console","log","producto","nombre","descripcion","comprar"],"sources":["D:/Certified Tech Dev/2022 - Bimestre III/Front-End II/Ejercicios/Entregable/src/components/Item.js"],"sourcesContent":["import { useState } from \"react\"\r\n// El componente Item no tiene componentes hijos.\r\n// ESTADO: Item debe tener un número para almacenar la cantidad de stock, la misma se la defina el padre a la hora de crearlo.\r\n// MÉTODOS: Item debe manejar el click de su boton para restar la cantidad en stock de sí mismo y a su vez poder aumentar el estado de su \"abuelo\" App.\r\n// PROPS: Item recibe todos los campos que muestra en pantalla: nombre, descripcion, stock y el métodos heredados para su uso.\r\n// Maqueta de Item:\r\n//    h3\r\n//    p\r\n//    h5 > span    (este span debe mostrar la cantidad si es mayor a 0 \"agotado\" si llega a 0)\r\n//    button       (este boton debe permitir comprar, pero si la cantidad es menor a 0 debe estar deshabilitado y decir \"Sin stock\")\r\n\r\nexport default function Item(props) {\r\n\r\n  const [stock, setStock] = useState(props.stock)\r\n  function sell(){\r\n    console.log(stock)\r\n    if (stock-1>0){\r\n      setStock(stock-1)\r\n    } else {\r\n      setStock(\"agotado\")\r\n    }\r\n  }\r\n\r\n\r\n  return (\r\n    <div className='producto'>\r\n      <h3>{props.producto.nombre}</h3>\r\n      <p>{props.producto.descripcion}</p>\r\n      <h5>En stock: <span>{stock}</span></h5>\r\n      <button onClick={() => {\r\n        props.comprar()\r\n        sell()\r\n      }}>COMPRAR</button>\r\n    </div>\r\n  )\r\n}\r\n"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB,C,CACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,eAAe,SAASC,IAAT,CAAcC,KAAd,EAAqB;EAAA;;EAElC,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAACE,KAAK,CAACC,KAAP,CAAlC;;EACA,SAASE,IAAT,GAAe;IACbC,OAAO,CAACC,GAAR,CAAYJ,KAAZ;;IACA,IAAIA,KAAK,GAAC,CAAN,GAAQ,CAAZ,EAAc;MACZC,QAAQ,CAACD,KAAK,GAAC,CAAP,CAAR;IACD,CAFD,MAEO;MACLC,QAAQ,CAAC,SAAD,CAAR;IACD;EACF;;EAGD,oBACE;IAAK,SAAS,EAAC,UAAf;IAAA,wBACE;MAAA,UAAKF,KAAK,CAACM,QAAN,CAAeC;IAApB;MAAA;MAAA;MAAA;IAAA,QADF,eAEE;MAAA,UAAIP,KAAK,CAACM,QAAN,CAAeE;IAAnB;MAAA;MAAA;MAAA;IAAA,QAFF,eAGE;MAAA,sCAAc;QAAA,UAAOP;MAAP;QAAA;QAAA;QAAA;MAAA,QAAd;IAAA;MAAA;MAAA;MAAA;IAAA,QAHF,eAIE;MAAQ,OAAO,EAAE,MAAM;QACrBD,KAAK,CAACS,OAAN;QACAN,IAAI;MACL,CAHD;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAJF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAWD;;GAxBuBJ,I;;KAAAA,I"},"metadata":{},"sourceType":"module"}